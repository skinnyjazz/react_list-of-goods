{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","Reverse","setState","SortByAlphabet","ALPHABET","SortByLength","LENGTH","Reset","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","isChanged","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gBARzB,EAYEG,eAAiB,kBAAM,EAAKD,SAAS,CACnCJ,SAAUJ,EAASU,YAbvB,EAgBEC,aAAe,kBAAM,EAAKH,SAAS,CACjCJ,SAAUJ,EAASY,UAjBvB,EAoBEC,MAAQ,kBAAM,EAAKL,SAAS,CAC1BJ,SAAUJ,EAASK,KAAMC,YAAY,KArBzC,4CAwBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEZS,EA1DH,SACLA,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAENU,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKJ,EAASU,SACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKnB,EAASY,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITf,GACFU,EAAaM,UAGRN,EAmCSO,CAAkBtB,EAAiBa,KAAKX,OAEhDqB,EAAYlB,GAAcF,IAAaJ,EAASK,KAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYvB,IAAaJ,EAASU,WAEpCkB,QAASd,KAAKL,eALhB,iCAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYvB,IAAaJ,EAASY,SAEpCgB,QAASd,KAAKH,aALhB,4BAUA,wBACEe,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAarB,IAEfsB,QAASd,KAAKP,QALhB,qBAUCiB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA9EtC,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d20b32a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  Reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  SortByAlphabet = () => this.setState({\n    sortType: SortType.ALPHABET,\n  });\n\n  SortByLength = () => this.setState({\n    sortType: SortType.LENGTH,\n  });\n\n  Reset = () => this.setState({\n    sortType: SortType.NONE, isReversed: false,\n  });\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    const isChanged = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.SortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.SortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.Reverse}\n          >\n            Reverse\n          </button>\n\n          {isChanged && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.Reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}